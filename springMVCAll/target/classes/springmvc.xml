<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans.xsd 
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc.xsd"
                            

>

    <!-- 声明组件扫描器 -->
    <context:component-scan base-package="com.mycompany.controller" />
    
    
    
    <!-- 声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径 -->
    <!-- 例子 将show.jsp 移动到/WEB-INF/view/show.jsp里面 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 前缀：视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/"/>
        <!-- 后缀：视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- 声明注解驱动 -->
    <!-- default-servlet-handler 和框架的requestmapping注解有冲突，需要加入这个mvc:annotation-driven 解决-->
    <!--<mvc:annotation-driven />-->
    
    <!-- 第一种处理静态资源的方式： 
        需要再springmvc加入<mvc：default-servelt-handler/>
        原理是加入这个标签后，框架会创建控制器对象DefualtServletHttpRequestHandler(类似我们自己创建的MyController)。
        DefualtServletHttpRequestHandler这个对象可以把接受的请求转发tomcat给default这个servlet
        
        服务器必须要default servlet才能使用这种方法
    -->
    <!--<mvc:default-servlet-handler/>-->
    
    
    
     <!-- 第二种处理静态资源的方式： 
        mvc:resources标签加入后，框架会创建一个ResourceHttpRequestHandler处理器对象，让这个处理静态资源的访问，不依赖服务器（such as tomcat）
        mapping指的是访问静态资源得uri地址，使用通配符**
        location：静态资源在你的项目中得目录位置。
        
        images/** 表示images/p1.jpg, images/users/logo.gif, images/order/history/list.png
    -->
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/html/**" location="/html/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    
    <!-- <mvc:resources >和框架的requestmapping注解有冲突，需要加入这个mvc:annotation-driven 解决-->
    <mvc:annotation-driven />
    
    <!-- 一般静态资源都是放在static文件里面，像是images,html, js-->
    <mvc:resources mapping="/static/**" location="/static/" />
</beans>
